from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP, ICMP
import datetime

# Callback function to handle the captured packet
def packet_callback(packet):
    print(f"Packet captured at {datetime.datetime.now()}")
    
    # Check if the packet is IP (IPv4) based
    if packet.haslayer(IP):
        ip_src = packet[IP].src
        ip_dst = packet[IP].dst
        print(f"Source IP: {ip_src}")
        print(f"Destination IP: {ip_dst}")
        
        # Check for transport layer protocols (TCP, UDP, ICMP)
        if packet.haslayer(TCP):
            print("Protocol: TCP")
            print(f"Source Port: {packet[TCP].sport}")
            print(f"Destination Port: {packet[TCP].dport}")
        elif packet.haslayer(UDP):
            print("Protocol: UDP")
            print(f"Source Port: {packet[UDP].sport}")
            print(f"Destination Port: {packet[UDP].dport}")
        elif packet.haslayer(ICMP):
            print("Protocol: ICMP")
        
        print("-" * 50)

# Start sniffing network traffic
print("Starting the sniffer...")
sniff(prn=packet_callback, store=0)  # store=0 means we don't keep the packet in memory
